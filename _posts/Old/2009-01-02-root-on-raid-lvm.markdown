---
layout: post
status: publish
published: true
title: Root on RAID+LVM
author: Hans
author_login: fugalh
author_email: hans@fugal.net
author_url: http://hans.fugal.net/
wordpress_id: 1030
wordpress_url: urn:uuid:a7008bdb-fdbb-4aa9-b571-3c68a0c318c1
date: '2009-01-02 11:50:00.000000000 -08:00'
tags:
- linux
- lvm
- rescue
- raid
- boot
- pld
- grub
- initrd
- initramfs
- yaird
- root
comments:
- id: 2184
  author: Anders
  author_email: anders-fugal@evantide.com
  author_url: ''
  date: '2010-02-23 23:26:27 -0800'
  date_gmt: '2010-02-23 23:26:27 -0800'
  content: "Thanks for the post - the /dev/mapper/* rather than /dev/vg0/* hint was
    key for me.\r\n\r\nHowever, I'm not clear on exactly how (in my case) \"mdadm
    -A /dev/md0 /dev/sd[ab]1\" and \"vgchange -ay\" get invoked before the root mount
    is attempted. Is that something you are doing in your initrd?"
- id: 2185
  author: Hans
  author_email: hans@fugal.net
  author_url: http://hans.fugal.net/
  date: '2010-02-23 23:56:18 -0800'
  date_gmt: '2010-02-23 23:56:18 -0800'
  content: "Been awhile, but I think that the LVM stuff at boot is indeed part of
    the initial ramdisk.\r\n\r\nI think mdadm shouldn't be necessary if you have a
    recent kernel and have the right partition type (linux raid autodetect)."
- id: 2221
  author: Matthew Nuzum
  author_email: newz@bearfruit.org
  author_url: http://www.bearfruit.org
  date: '2010-03-24 22:18:03 -0700'
  date_gmt: '2010-03-24 22:18:03 -0700'
  content: Hey, thanks for the tip. I was getting very frustrated while trying out
    Lenny. Once I installed lvm2 and mdadm everything worked great. (not to knock
    Lenny at all - I was trying something kind of odd by booting a system that was
    installed with debootstrap)
- id: 2838
  author: Migrate a live server from Ubuntu to Debian remotelyBearfruit | Bearfruit
  author_email: ''
  author_url: http://www.bearfruit.org/2010/04/14/migrate-a-live-server-from-ubuntu-to-debian-remotely/
  date: '2013-08-25 21:19:55 -0700'
  date_gmt: '2013-08-25 21:19:55 -0700'
  content: '[&#8230;] Fugal&#8217;s article on Root on RAID+LVM since Ubuntu server
    uses LVM by [&#8230;]'
---
<p>This stuff is documented out there, but I thought I'd give a brief summary and anecdotal evidence that it works.</p>

<p>I wanted to move falcon onto a RAID1 array, including root. Falcon was already using LVM for everything but root, and I wanted root on the RAID as well and so it made sense to just go all the way.</p>

<p>I had a bit of a hairy time, primarily because I wasn't as prepared as I thought I was. This is in part because I was doing all this without internet, in part because of stupidity and lack of foresight, and in part because some vital things that I thought were in order, were not. But really it's not that bad if you know what you're doing. Having learned my lessons I did the same thing for gwythaint without incident in just a few minutes (not counting time spent copying files).</p>

<p>Let's begin as all good chefs do, with <em>mise en place</em>. </p>

<p>You need a good boot disk with grub and LVM/RAID support. This is harder to find than you might think. Ubuntu's Live CD doesn't have LVM support (not sure about RAID). Debian Etch's installer has RAID and LVM support, but its grub facilities are sorely lacking, and it takes forever to boot. Now would be a very good time to get familiar with the <a href="http://rescuecd.pld-linux.org/">PLD Rescue Disk</a>. This puppy is an absolute gem and no sysadmin should be without it. It supports LVM, RAID, every important filesystem, has a full suite of tools, <a href="http://www.supergrubdisk.org/">super grub disk</a>, <a href="https://gna.org/projects/grub4dos/">GRUB4DOS</a>, and more. I can't sing enough praises for PLD's rescue disk, so I won't try. Just get it.</p>

<p>You naturally need to install the lvm2 and mdadm packages.</p>

<p>You need a kernel that supports RAID and LVM. Most stock kernels will, but make sure! Also, regenerate the initrd after installing the lvm2 and mdadm packages. You can do this with <code>dpkg-reconfigure linux-image-`uname -r`</code>. I got bit by an initrd generated by yaird that didn't like being moved, so you should make sure you have initramfs-tools installed when you regenerate the initrd.</p>

<p>Grub2 <a href="http://grub.enbug.org/LVMandRAID">reportedly has RAID and LVM support</a> but I didn't have grub2 and didn't want to press my luck. So I made a boot partition (<em>not</em> on the RAID or in LVM) and copied over <code>/boot</code>.</p>

<p>Now set up the new RAID and LVM. In my case it was as simple as creating the RAID with one disk (the disk that currently hosted my system was eventually added too) then making a physical volume out of that array (pvcreate), adding it to the virtual group (vgextend), creating a new logical volume for root (lvcreate) along with its filesystem, and moving the already-existing logical volumes over to the new physical volume (lvmove). Then reboot into the rescue disk so you can safely copy over the root filesystem (PLD has rsync which makes this a snap).</p>

<p>PLD doesn't automatically assemble RAID arrays or activate volume groups, so you need to do this manually. Something like this:</p>

<pre><code>mdadm -A /dev/md0 /dev/sdb2
vgchange -ay
</code></pre>

<p>Now for the fun part: getting things to boot. First, you need to modify the new /etc/fstab to reflect the new location of /. That is, <code>/dev/vg1/root</code> (or whatever you called it). Also put in /boot.</p>

<p>Reboot and choose super grub disk at the PLD boot. At first I played with the menus but after a dozen boots (literally, I told you it was hairy) I was an expert at the grub command line and was doing things by hand. Hit c to get the grub cli, then type something like this:</p>

<pre><code>find /grub/menu.lst
root (hd0,0)
setup (hd0)
kernel /vmlinuz-2.6.18-6-k7 root=/dev/mapper/vg1-root ro
initrd /initrd.img-2.6.18-6-k7
boot
</code></pre>

<p>Let's analyze that.
First we find <code>/grub/menu.lst</code> which just tells us what grub calls the boot partition: <code>(hd0,0)</code> in this case. (I had a heck of a time with grub not finding my boot partition and I don't know why. Maybe fdisk or BIOS issues. I still don't know. I eventually was able to get a partitioning that worked, hopefully you don't have any issues.)</p>

<p>Next we tell grub to use that partition as root. The setup line installs grub on the MBR so we won't need to use the rescue disk in the future. </p>

<p>The kernel and initrd lines are normal grub fare. The important thing here is the root option. You <em>must</em> use the <code>/dev/mapper/vg1-root</code> path, not <code>/dev/vg1/root</code>. At least this is true on Debian Etch stock kernels, but it seems like a good idea in any case. The reason is that the <code>/dev/mapper</code> paths are there from the kernel but the <code>/dev/vg1</code> symlinks are added with boot scripts.</p>

<p>You should boot right up. After boot, issue <code>mount</code> to verify that things do look like they ought to. Edit <code>/boot/grub/menu.lst</code> and run <code>update-grub</code>, then try booting without the rescue CD. You're in business!</p>

<p>In summary: read the RAID and LVM howtos, LVM goes on top of RAID, get PLD, make sure your kernel and ramdisks are in order, leave <code>/boot</code> off the RAID/LVM, don't forget to change <code>/etc/fstab</code>, and use the <code>/dev/mapper/${VG}-${LV}</code> path in the kernel root option.</p>
